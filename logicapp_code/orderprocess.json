{
  "$connections": {
    "value": {
      "azureblob": {
        "connectionId": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/resourceGroups/svlsb2brg/providers/Microsoft.Web/connections/azureblob",
        "connectionName": "azureblob",
        "id": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/providers/Microsoft.Web/locations/southeastasia/managedApis/azureblob"
      },
      "azureeventgrid_1": {
        "connectionId": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/resourceGroups/svlsb2brg/providers/Microsoft.Web/connections/azureeventgrid",
        "connectionName": "azureeventgrid",
        "id": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/providers/Microsoft.Web/locations/southeastasia/managedApis/azureeventgrid"
      },
      "azuretables": {
        "connectionId": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/resourceGroups/svlsb2brg/providers/Microsoft.Web/connections/azuretables",
        "connectionName": "azuretables",
        "id": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/providers/Microsoft.Web/locations/southeastasia/managedApis/azuretables"
      }
    }
  },
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Compose": {
        "inputs": "@{split(triggerBody()?['subject'], '/')?[4]}/@{split(triggerBody()?['subject'], '/')?[6]}",
        "runAfter": {
          "Initialize_variable_4": [
            "Succeeded"
          ]
        },
        "type": "Compose"
      },
      "Condition": {
        "actions": {
          "Delete_blob": {
            "inputs": {
              "host": {
                "connection": {
                  "name": "@parameters('$connections')['azureblob']['connectionId']"
                }
              },
              "method": "delete",
              "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
            },
            "runAfter": {
              "Switch": [
                "Succeeded"
              ]
            },
            "type": "ApiConnection"
          },
          "Switch": {
            "cases": {
              "Case": {
                "actions": {
                  "For_each": {
                    "actions": {
                      "Condition_2": {
                        "actions": {
                          "Set_variable_7": {
                            "inputs": {
                              "name": "orderstatus",
                              "value": "PendingApproval"
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                          }
                        },
                        "else": {
                          "actions": {
                            "Set_variable_8": {
                              "inputs": {
                                "name": "orderstatus",
                                "value": "Approved"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          }
                        },
                        "expression": {
                          "and": [
                            {
                              "greater": [
                                "@items('For_each')?['qty']",
                                5
                              ]
                            },
                            {
                              "equals": [
                                "@items('For_each')?['item']",
                                "printers"
                              ]
                            }
                          ]
                        },
                        "runAfter": {
                          "Set_variable_3": [
                            "Succeeded"
                          ]
                        },
                        "type": "If"
                      },
                      "Insert_Entity": {
                        "inputs": {
                          "body": "@\r\n\r\nsetProperty(addProperty(addProperty(addProperty(removeProperty(removeProperty(removeProperty(addProperty(addProperty(items('For_each'),'RowKey',guid()),'PartitionKey','neocorp'),'pid'),'odate'),'ddate'),'partnercode',variables('partnercode')),'orderdate',variables('orderdate')),'deliverydate',variables('deliverydate')),'status',variables('orderstatus'))",
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuretables']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/Tables/@{encodeURIComponent('orderdata')}/entities"
                        },
                        "runAfter": {
                          "Condition_2": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection"
                      },
                      "Set_variable": {
                        "inputs": {
                          "name": "partnercode",
                          "value": "@items('For_each')?['pid']"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                      },
                      "Set_variable_2": {
                        "inputs": {
                          "name": "orderdate",
                          "value": "@items('For_each')?['odate']"
                        },
                        "runAfter": {
                          "Set_variable": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable"
                      },
                      "Set_variable_3": {
                        "inputs": {
                          "name": "deliverydate",
                          "value": "@items('For_each')?['ddate']"
                        },
                        "runAfter": {
                          "Set_variable_2": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable"
                      }
                    },
                    "foreach": "@body('Parse_JSON')?['orders']",
                    "runAfter": {
                      "Parse_JSON": [
                        "Succeeded"
                      ]
                    },
                    "type": "Foreach"
                  },
                  "Get_Blob_Metadata": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                  },
                  "Get_blob_content": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(body('Get_Blob_Metadata')?['Id']))}/content",
                      "queries": {
                        "inferContentType": true
                      }
                    },
                    "runAfter": {
                      "Get_Blob_Metadata": [
                        "Succeeded"
                      ]
                    },
                    "type": "ApiConnection"
                  },
                  "Parse_JSON": {
                    "inputs": {
                      "content": "@json(body('Get_blob_content'))",
                      "schema": {
                        "properties": {
                          "orders": {
                            "items": {
                              "properties": {
                                "amount": {
                                  "type": "integer"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "ddate": {
                                  "type": "string"
                                },
                                "item": {
                                  "type": "string"
                                },
                                "odate": {
                                  "type": "string"
                                },
                                "orderid": {
                                  "type": "string"
                                },
                                "pid": {
                                  "type": "string"
                                },
                                "qty": {
                                  "type": "number"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "uom": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "pid",
                                "odate",
                                "amount",
                                "item",
                                "ddate",
                                "uom",
                                "status",
                                "currency",
                                "orderid",
                                "qty"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "runAfter": {
                      "Get_blob_content": [
                        "Succeeded"
                      ]
                    },
                    "type": "ParseJson"
                  }
                },
                "case": "neocorp"
              },
              "Case_2": {
                "actions": {
                  "For_each_2": {
                    "actions": {
                      "Condition_3": {
                        "actions": {
                          "Set_variable_9": {
                            "inputs": {
                              "name": "orderstatus",
                              "value": "PendingApproval"
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                          }
                        },
                        "else": {
                          "actions": {
                            "Set_variable_10": {
                              "inputs": {
                                "name": "orderstatus",
                                "value": "Approved"
                              },
                              "runAfter": {},
                              "type": "SetVariable"
                            }
                          }
                        },
                        "expression": {
                          "and": [
                            {
                              "greater": [
                                "@items('For_each_2')?['qty']",
                                3
                              ]
                            },
                            {
                              "equals": [
                                "@items('For_each_2')?['item']",
                                "computers"
                              ]
                            }
                          ]
                        },
                        "runAfter": {
                          "Set_variable_6": [
                            "Succeeded"
                          ]
                        },
                        "type": "If"
                      },
                      "Insert_Entity_2": {
                        "inputs": {
                          "body": "@setProperty(addProperty(addProperty(addProperty(removeProperty(removeProperty(removeProperty(addProperty(addProperty(items('For_each_2'),'RowKey',guid()),'PartitionKey','femacorp'),'partnerid'),'orderdate'),'delvydate'),'partnercode',variables('partnercode')),'orderdate',variables('orderdate')),'deliverydate',variables('deliverydate')),'status',variables('orderstatus'))",
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuretables']['connectionId']"
                            }
                          },
                          "method": "post",
                          "path": "/Tables/@{encodeURIComponent('orderdata')}/entities"
                        },
                        "runAfter": {
                          "Condition_3": [
                            "Succeeded"
                          ]
                        },
                        "type": "ApiConnection"
                      },
                      "Set_variable_4": {
                        "inputs": {
                          "name": "partnercode",
                          "value": "@items('For_each_2')?['partnerid']"
                        },
                        "runAfter": {},
                        "type": "SetVariable"
                      },
                      "Set_variable_5": {
                        "inputs": {
                          "name": "orderdate",
                          "value": "@items('For_each_2')?['orderdate']"
                        },
                        "runAfter": {
                          "Set_variable_4": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable"
                      },
                      "Set_variable_6": {
                        "inputs": {
                          "name": "deliverydate",
                          "value": "@items('For_each_2')?['delvydate']"
                        },
                        "runAfter": {
                          "Set_variable_5": [
                            "Succeeded"
                          ]
                        },
                        "type": "SetVariable"
                      }
                    },
                    "foreach": "@body('Parse_JSON_2')?['orders']",
                    "runAfter": {
                      "Parse_JSON_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "Foreach"
                  },
                  "Get_Blob_Metadata_2": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                  },
                  "Get_blob_content_2": {
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['azureblob']['connectionId']"
                        }
                      },
                      "method": "get",
                      "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(body('Get_Blob_Metadata_2')?['Id']))}/content",
                      "queries": {
                        "inferContentType": true
                      }
                    },
                    "runAfter": {
                      "Get_Blob_Metadata_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "ApiConnection"
                  },
                  "Parse_JSON_2": {
                    "inputs": {
                      "content": "@json(body('Get_blob_content_2'))",
                      "schema": {
                        "properties": {
                          "orders": {
                            "items": {
                              "properties": {
                                "amount": {
                                  "type": "number"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "delvydate": {
                                  "type": "string"
                                },
                                "item": {
                                  "type": "string"
                                },
                                "orderdate": {
                                  "type": "string"
                                },
                                "orderid": {
                                  "type": "string"
                                },
                                "partnerid": {
                                  "type": "string"
                                },
                                "qty": {
                                  "type": "number"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "uom": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "partnerid",
                                "orderdate",
                                "amount",
                                "item",
                                "delvydate",
                                "uom",
                                "status",
                                "currency",
                                "orderid",
                                "qty"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "runAfter": {
                      "Get_blob_content_2": [
                        "Succeeded"
                      ]
                    },
                    "type": "ParseJson"
                  }
                },
                "case": "femacorp"
              }
            },
            "default": {
              "actions": {}
            },
            "expression": "@split(triggerBody()?['subject'], '/')?[4]",
            "runAfter": {},
            "type": "Switch"
          }
        },
        "expression": {
          "and": [
            {
              "equals": [
                "@triggerBody()?['eventType']",
                "Microsoft.Storage.BlobCreated"
              ]
            }
          ]
        },
        "runAfter": {
          "Compose": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "Initialize_variable": {
        "inputs": {
          "variables": [
            {
              "name": "partnercode",
              "type": "String"
            }
          ]
        },
        "runAfter": {},
        "type": "InitializeVariable"
      },
      "Initialize_variable_2": {
        "inputs": {
          "variables": [
            {
              "name": "orderdate",
              "type": "String"
            }
          ]
        },
        "runAfter": {
          "Initialize_variable": [
            "Succeeded"
          ]
        },
        "type": "InitializeVariable"
      },
      "Initialize_variable_3": {
        "inputs": {
          "variables": [
            {
              "name": "deliverydate",
              "type": "String"
            }
          ]
        },
        "runAfter": {
          "Initialize_variable_2": [
            "Succeeded"
          ]
        },
        "type": "InitializeVariable"
      },
      "Initialize_variable_4": {
        "inputs": {
          "variables": [
            {
              "name": "orderstatus",
              "type": "String"
            }
          ]
        },
        "runAfter": {
          "Initialize_variable_3": [
            "Succeeded"
          ]
        },
        "type": "InitializeVariable"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {
      "$connections": {
        "defaultValue": {},
        "type": "Object"
      }
    },
    "triggers": {
      "When_a_resource_event_occurs": {
        "inputs": {
          "body": {
            "properties": {
              "destination": {
                "endpointType": "webhook",
                "properties": {
                  "endpointUrl": "@{listCallbackUrl()}"
                }
              },
              "filter": {
                "includedEventTypes": [
                  "Microsoft.Storage.BlobCreated"
                ]
              },
              "topic": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/resourceGroups/svlsb2brg/providers/Microsoft.Storage/storageAccounts/svlsb2bin"
            }
          },
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
            }
          },
          "path": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/providers/@{encodeURIComponent('Microsoft.Storage.StorageAccounts')}/resource/eventSubscriptions",
          "queries": {
            "x-ms-api-version": "2017-09-15-preview"
          }
        },
        "splitOn": "@triggerBody()",
        "type": "ApiConnectionWebhook"
      }
    }
  }
}