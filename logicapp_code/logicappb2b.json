{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azuretables_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azuretables"
    },
    "azuretables_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "orderstable"
    },
    "azuretables_1_storageaccount": {
      "type": "string",
      "metadata": {
        "description": "The name of your storage account"
      },
      "defaultValue": "svlsb2bin"
    },
    "azuretables_1_sharedkey": {
      "type": "securestring",
      "metadata": {
        "description": "The shared storage key of your storage account"
      }
    },
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "neworderstore"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "svlsb2bin"
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureeventgrid_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureeventgrid"
    },
    "azureeventgrid_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "live.com#s_srikantan@hotmail.com"
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "defaultValue": "southeastasia"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "ordergenflow"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Compose": {
              "type": "Compose",
              "inputs": "@{split(triggerBody()?['subject'], '/')?[4]}/@{split(triggerBody()?['subject'], '/')?[6]}",
              "runAfter": {
                "Initialize_variable_4": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@triggerBody()?['eventType']",
                      "Microsoft.Storage.BlobCreated"
                    ]
                  }
                ]
              },
              "actions": {
                "Delete_blob": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                      }
                    },
                    "method": "delete",
                    "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
                  },
                  "runAfter": {
                    "Switch": [
                      "Succeeded"
                    ]
                  }
                },
                "Switch": {
                  "type": "Switch",
                  "expression": "@split(triggerBody()?['subject'], '/')?[4]",
                  "cases": {
                    "Case": {
                      "case": "neocorp",
                      "actions": {
                        "For_each": {
                          "type": "Foreach",
                          "foreach": "@body('Parse_JSON')?['orders']",
                          "actions": {
                            "Condition_2": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@items('For_each')?['qty']",
                                      5
                                    ]
                                  },
                                  {
                                    "equals": [
                                      "@items('For_each')?['item']",
                                      "printers"
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Set_variable_7": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "orderstatus",
                                    "value": "PendingApproval"
                                  },
                                  "runAfter": {}
                                }
                              },
                              "runAfter": {
                                "Set_variable_3": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_variable_8": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "orderstatus",
                                      "value": "Approved"
                                    },
                                    "runAfter": {}
                                  }
                                }
                              }
                            },
                            "Insert_Entity": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": "@\r\n\r\nsetProperty(addProperty(addProperty(addProperty(removeProperty(removeProperty(removeProperty(addProperty(addProperty(items('For_each'),'RowKey',guid()),'PartitionKey','neocorp'),'pid'),'odate'),'ddate'),'partnercode',variables('partnercode')),'orderdate',variables('orderdate')),'deliverydate',variables('deliverydate')),'status',variables('orderstatus'))",
                                "path": "/Tables/@{encodeURIComponent('orderdata')}/entities"
                              },
                              "runAfter": {
                                "Condition_2": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_variable": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "partnercode",
                                "value": "@items('For_each')?['pid']"
                              },
                              "runAfter": {}
                            },
                            "Set_variable_2": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "orderdate",
                                "value": "@items('For_each')?['odate']"
                              },
                              "runAfter": {
                                "Set_variable": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_variable_3": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "deliverydate",
                                "value": "@items('For_each')?['ddate']"
                              },
                              "runAfter": {
                                "Set_variable_2": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Get_Blob_Metadata": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
                          },
                          "runAfter": {}
                        },
                        "Get_blob_content": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(body('Get_Blob_Metadata')?['Id']))}/content",
                            "queries": {
                              "inferContentType": true
                            }
                          },
                          "runAfter": {
                            "Get_Blob_Metadata": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@json(body('Get_blob_content'))",
                            "schema": {
                              "properties": {
                                "orders": {
                                  "items": {
                                    "properties": {
                                      "amount": {
                                        "type": "integer"
                                      },
                                      "currency": {
                                        "type": "string"
                                      },
                                      "ddate": {
                                        "type": "string"
                                      },
                                      "item": {
                                        "type": "string"
                                      },
                                      "odate": {
                                        "type": "string"
                                      },
                                      "orderid": {
                                        "type": "string"
                                      },
                                      "pid": {
                                        "type": "string"
                                      },
                                      "qty": {
                                        "type": "number"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "uom": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "pid",
                                      "odate",
                                      "amount",
                                      "item",
                                      "ddate",
                                      "uom",
                                      "status",
                                      "currency",
                                      "orderid",
                                      "qty"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "Get_blob_content": [
                              "Succeeded"
                            ]
                          }
                        }
                      }
                    },
                    "Case_2": {
                      "case": "femacorp",
                      "actions": {
                        "For_each_2": {
                          "type": "Foreach",
                          "foreach": "@body('Parse_JSON_2')?['orders']",
                          "actions": {
                            "Condition_3": {
                              "type": "If",
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@items('For_each_2')?['qty']",
                                      3
                                    ]
                                  },
                                  {
                                    "equals": [
                                      "@items('For_each_2')?['item']",
                                      "computers"
                                    ]
                                  }
                                ]
                              },
                              "actions": {
                                "Set_variable_9": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "orderstatus",
                                    "value": "PendingApproval"
                                  },
                                  "runAfter": {}
                                }
                              },
                              "runAfter": {
                                "Set_variable_6": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_variable_10": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "orderstatus",
                                      "value": "Approved"
                                    },
                                    "runAfter": {}
                                  }
                                }
                              }
                            },
                            "Insert_Entity_2": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuretables']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": "@setProperty(addProperty(addProperty(addProperty(removeProperty(removeProperty(removeProperty(addProperty(addProperty(items('For_each_2'),'RowKey',guid()),'PartitionKey','femacorp'),'partnerid'),'orderdate'),'delvydate'),'partnercode',variables('partnercode')),'orderdate',variables('orderdate')),'deliverydate',variables('deliverydate')),'status',variables('orderstatus'))",
                                "path": "/Tables/@{encodeURIComponent('orderdata')}/entities"
                              },
                              "runAfter": {
                                "Condition_3": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_variable_4": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "partnercode",
                                "value": "@items('For_each_2')?['partnerid']"
                              },
                              "runAfter": {}
                            },
                            "Set_variable_5": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "orderdate",
                                "value": "@items('For_each_2')?['orderdate']"
                              },
                              "runAfter": {
                                "Set_variable_4": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_variable_6": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "deliverydate",
                                "value": "@items('For_each_2')?['delvydate']"
                              },
                              "runAfter": {
                                "Set_variable_5": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON_2": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Get_Blob_Metadata_2": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(outputs('Compose')))}"
                          },
                          "runAfter": {}
                        },
                        "Get_blob_content_2": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(body('Get_Blob_Metadata_2')?['Id']))}/content",
                            "queries": {
                              "inferContentType": true
                            }
                          },
                          "runAfter": {
                            "Get_Blob_Metadata_2": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Parse_JSON_2": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@json(body('Get_blob_content_2'))",
                            "schema": {
                              "properties": {
                                "orders": {
                                  "items": {
                                    "properties": {
                                      "amount": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string"
                                      },
                                      "delvydate": {
                                        "type": "string"
                                      },
                                      "item": {
                                        "type": "string"
                                      },
                                      "orderdate": {
                                        "type": "string"
                                      },
                                      "orderid": {
                                        "type": "string"
                                      },
                                      "partnerid": {
                                        "type": "string"
                                      },
                                      "qty": {
                                        "type": "number"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "uom": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "partnerid",
                                      "orderdate",
                                      "amount",
                                      "item",
                                      "delvydate",
                                      "uom",
                                      "status",
                                      "currency",
                                      "orderid",
                                      "qty"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "runAfter": {
                            "Get_blob_content_2": [
                              "Succeeded"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "actions": {}
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "partnercode",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_variable_2": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "orderdate",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_3": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "deliverydate",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_4": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "orderstatus",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                  }
                },
                "body": {
                  "properties": {
                    "topic": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/resourceGroups/svlsb2brg/providers/Microsoft.Storage/storageAccounts/svlsb2bin",
                    "filter": {
                      "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                      ]
                    },
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    }
                  }
                },
                "path": "/subscriptions/f58dda75-ba34-492f-afa9-b78e0e39ad0d/providers/@{encodeURIComponent('Microsoft.Storage.StorageAccounts')}/resource/eventSubscriptions",
                "queries": {
                  "x-ms-api-version": "2017-09-15-preview"
                }
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              },
              "azuretables": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azuretables')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]",
                "connectionName": "[parameters('azuretables_1_Connection_Name')]"
              },
              "azureeventgrid_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]",
                "connectionName": "[parameters('azureeventgrid_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuretables_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('azuretables_1_Connection_Name')]",
      "location": "southeastasia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azuretables')]"
        },
        "displayName": "[parameters('azuretables_1_Connection_DisplayName')]",
        "parameterValues": {
          "storageaccount": "[parameters('azuretables_1_storageaccount')]",
          "sharedkey": "[parameters('azuretables_1_sharedkey')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "southeastasia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('azureeventgrid_1_Connection_Name')]",
      "location": "southeastasia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southeastasia', '/managedApis/', 'azureeventgrid')]"
        },
        "displayName": "[parameters('azureeventgrid_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}